name: CI/CD for Ws
on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./docker/Dockerfile.ws
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/mono-ws:${{ github.sha }}

      - name: Setup SSH
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.PRIVATE_SSH }}
          port: 22
          script: |
            # Aggressive Docker cleanup before deployment
            echo "Cleaning up Docker resources..."
            sudo docker system prune -a -f --volumes
            # Remove all old mono-ws images except the one we're about to pull
            sudo docker images --format "{{.Repository}}:{{.Tag}} {{.ID}}" | grep "mono-ws" | grep -v "${{ github.sha }}" | awk '{print $2}' | xargs sudo docker rmi -f || true
            # Remove dangling images
            sudo docker image prune -f
            # Pull the new image
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/mono-ws:${{ github.sha }}
            # Stop and remove old container
            sudo docker stop ws || true
            sudo docker rm ws || true
            # Run new container
            sudo docker run -d --name ws -p 4041:8081 ${{ secrets.DOCKER_USERNAME }}/mono-ws:${{ github.sha }}
            # Final cleanup - keep only the running image
            sudo docker images --format "{{.Repository}}:{{.Tag}} {{.ID}}" | grep "mono-ws" | grep -v "${{ github.sha }}" | awk '{print $2}' | xargs sudo docker rmi -f || true
        

